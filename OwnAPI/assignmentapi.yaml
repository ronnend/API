openapi: 3.0.0
info:
  title: E-commerce API
  description: API to manage products and categories for an e-commerce platform.
  version: 1.0.0
servers:
  - url: http://{your-domain}/api
    description: Base URL for the E-commerce API

paths:
  /products:
    get:
      summary: Retrieve product data
      description: Fetch product data from the database.
      tags:
        - Products
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Post product data to the seller's webpage
      description: Post transformed product data to the seller's webpage.
      tags:
        - Products
      requestBody:
        description: List of products to be posted
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Products posted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /products/search:
    post:
      summary: Search for products based on specific criteria
      description: Search for products based on specific criteria, such as name, description, category, or tags.
      tags:
        - Products
      requestBody:
        description: Criteria for product search
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSearchCriteria'
      responses:
        '200':
          description: A list of products matching the search criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /categories:
    get:
      summary: Retrieve all categories
      description: Fetch all categories available in the webshop.
      tags:
        - Categories
      responses:
        '200':
          description: A list of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Create a new category
      description: Add a new category to the webshop.
      tags:
        - Categories
      requestBody:
        description: Category data to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          description: Category created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Product:
      type: object
      properties:
        name:
          type: string
          example: Product Name
        description:
          type: string
          example: Product Description
        sku:
          type: string
          example: 12345
        price:
          type: number
          format: float
          example: 99.99
        imageUrl:
          type: string
          example: http://example.com/image.jpg
        category:
          type: string
          example: Category Name
        tags:
          type: array
          items:
            type: string
          example: ["tag1", "tag2"]

    Category:
      type: object
      properties:
        name:
          type: string
          example: Category Name
        description:
          type: string
          example: Category Description

    ProductSearchCriteria:
      type: object
      properties:
        keyword:
          type: string
          example: Product
        category:
          type: string
          example: Electronics
        tags:
          type: array
          items:
            type: string
          example: ["tag1", "tag2"]

    SuccessResponse:
      type: object
      properties:
        message:
          type: string
          example: Operation completed successfully

    Error:
      type: object
      properties:
        message:
          type: string
          example: Internal Server Error
